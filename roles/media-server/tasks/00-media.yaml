---
- name: make sure media group exists
  group:
    name: "media"
    state: present
    gid: 8675309
  become: true

- name: add ansible user to media group
  user:
    name: "{{ ansible_user }}"
    groups: "media"
    append: true
  become: true
 

- name: add NVIDIA apt signing key
  apt_key:
    url: https://nvidia.github.io/nvidia-docker/gpgkey
    state: present
  become: true

- name: add  NVIDIA repository into sources list
  get_url:
    url: https://nvidia.github.io/nvidia-docker/{{ ansible_distribution | lower }}{{ ansible_distribution_version }}/nvidia-docker.list
    dest: /etc/apt/sources.list.d/nvidia-docker.list
    owner: root
    group: root
    mode: 0644
  become: true

- name: install nvidia-docker2
  apt: 
    name: nvidia-docker2
    state: latest
    update_cache: true 
    cache_valid_time: 3600
  register: nvidia_docker_apt
  become: true

- name: reload Docker configuration
  service: 
    name: docker
    state: reloaded
  when: nvidia_docker_apt.changed == True
  become: true

- name: configure jackett basepath
  replace:
    path: "{{ app_folder }}/jackett/ServerConfig.json"
    regexp: '"BasePathOverride": ".*",'
    replace: '"BasePathOverride": "/jackett",'

- name: configure radarr basepath
  replace:
    path: "{{ app_folder }}/radarr/config.xml"
    regexp: '<UrlBase>.*</UrlBase>'
    replace: '<UrlBase>radarr</UrlBase>'

- name: configure sonarr basepath
  replace:
    path: "{{ app_folder }}/sonarr/config.xml"
    regexp: '<UrlBase>.*</UrlBase>'
    replace: '<UrlBase>sonarr</UrlBase>'

- name: configure tautulli basepath
  replace:
    path: "{{ app_folder }}/tautulli/config.ini"
    regexp: 'http_root = ".*"'
    replace: 'http_root = tautulli'

- name: configure tautulli proxy
  replace:
    path: "{{ app_folder }}/tautulli/config.ini"
    regexp: 'http_proxy = 0'
    replace: 'http_proxy = 1'

- name: disable transmission whitelist
  replace:
    path: "{{ app_folder }}/transmission/settings.json"
    regexp: '"rpc-host-whitelist-enabled": true,'
    replace: '"rpc-host-whitelist-enabled": false,'
  ignore_errors: true
